<?xml version="1.0" encoding="UTF-8"?>
<web-fragment xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-fragment_4_0.xsd"
              version="4.0">
    <distributable />
    <name>CuiPortalCDIConfiguration</name>

    <!-- Default Configuration -->
    <context-param>
        <param-name>javax.faces.DEFAULT_SUFFIX</param-name>
        <param-value>.xhtml</param-value>
    </context-param>

    <!-- Fix for set characterEncoding for each request to UTF-8 -->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.omnifaces.filter.CharacterEncodingFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/faces/*</url-pattern>
    </filter-mapping>

    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
        <multipart-config>
            <location />
            <max-file-size>52428800</max-file-size>
            <max-request-size>52428800</max-request-size>
            <file-size-threshold>52428801</file-size-threshold>
        </multipart-config>
    </servlet>
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.jsf</url-pattern>
        <url-pattern>/javax.faces.resource/*</url-pattern>
    </servlet-mapping>

    <!-- Primefaces Configuration -->
    <context-param>
        <description>the css styles and images package to include found in
		the resources library primefaces-"param-value"</description>
        <param-name>primefaces.THEME</param-name>
        <param-value>cui-mapping</param-value>
    </context-param>
    <context-param>
        <description>This parameter forces the primefaces upload component to use the servlet 3.x api for
        file uploads instead of commons-upload</description>
        <param-name>primefaces.UPLOADER</param-name>
        <param-value>native</param-value>
    </context-param>
    <!-- Performance related -->
    <context-param>
        <param-name>javax.faces.PARTIAL_STATE_SAVING</param-name>
        <param-value>true</param-value>
    </context-param>
    <context-param>
        <description>Serialization of Server state: if true it uses more cpu and less memory. Defaults to false
		Caution: This may lead to serialization issues like client side state saving.
        </description>
        <param-name>javax.faces.SERIALIZE_SERVER_STATE</param-name>
        <param-value>true</param-value>
    </context-param>
    <context-param>
        <description>In addition to serializeServerState this
		flag forces to compress the serialized output with GZip. This results in
		using more CPU and less memory </description>
        <param-name>com.sun.faces.compressViewState</param-name>
        <param-value>true</param-value>
    </context-param>
    <context-param>
        <description>If
		true, makes it so every session attribute is touched in for every request
		through the lifecycle. This makes it much harder to make mistakes that cause
		session replication to fail. Although not a performance flag itself, it may
		lead to reduced memory size at cost of CPU. The session replication safety
		is itself a good idea to prevent problems with session scoping showing
		to late (in production) </description>
        <param-name>com.sun.faces.enableAgressiveSessionDirtying</param-name>
        <param-value>true</param-value>
    </context-param>
    <context-param>
        <description>Logical views are subviews
		of a top-level view. For example, if you have a page that includes multiple
		frames then each frame is a logical view. If you have a simple application
		then the default of 15 views or 15 logical views might be too large. In this
		case, you should consider reducing the allowable number of views and logical
		views to conserve memory. Conversely, a more complex application might require
		more than 15 views or logical views to be saved in a session. Because we
		still have some includes we should not reduce to less
		than 5. </description>
        <param-name>com.sun.faces.numberOfLogicalViews</param-name>
        <param-value>5</param-value>
    </context-param>
    <context-param>
        <description>Specifies
		the number of views that are stored in the session when Server-Side State
		Saving is used. The default for this parameter is 15. Because our application
		allows tabs we do not use 1 or 2 but 5 </description>
        <param-name>com.sun.faces.numberOfViewsInSession</param-name>
        <param-value>5</param-value>
    </context-param>
    <context-param>
        <description>When a page is requested, what interval in seconds should the compiler check for changes.
        If you don't want the compiler to check for changes once the page is compiled, then use a value of -1.
        Setting a low refresh period helps during development to be able to edit pages in a running application.</description>
        <param-name>javax.faces.FACELETS_REFRESH_PERIOD</param-name>
        <param-value>-1</param-value>
    </context-param>
    <!-- Application Validation -->
    <context-param>
        <description>When
		set to true, tag library XML files and faces configuration XML files using
		schema are validated during application start. </description>
        <param-name>com.sun.faces.validateXml</param-name>
        <param-value>true</param-value>
    </context-param>
    <!-- Correctness -->
    <context-param>
        <description>Fix
		for Duplicated "javax.faces.ViewState" as id for each h:form element. Documentation
		from Oracle: If true, the view state hidden field will be rendered with both
		the id and name attributes having the value of "javax.faces.ViewState". This
		is what the spec requires, however, if there are multiple forms within a
		view and the response content-type is XHTML, the result will be XHTML that
		will fail validation due to multiple ID attributes with the same value: javax.faces.ViewState.
		Setting this parameter to false will result in the ID attribute not being
		rendered. Keep in mind however, that doing this may break integration with
		AJAX frameworks that get the state field via ID. </description>
        <param-name>com.sun.faces.enableViewStateIdRendering</param-name>
        <param-value>true</param-value>
    </context-param>
    <context-param>
        <description>If this param is set, and calling toLowerCase().equals("true") on a String representation of its value
        returns true, any implementation of UIInput.validate() must take the following additional action.
        If the javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL context parameter value is
        true (ignoring case), and UIInput.getSubmittedValue() returns a zero-length String call
        UIInput.setSubmittedValue(null) and continue processing using null as the current submitted value
        11-4 JavaServer Faces Specification . June 2009
        Workaround for empty url parameter. If the parameter is false the converters
        will be called with empty strings. With this flag we have a centralized solution</description>
        <param-name>javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL</param-name>
        <param-value>true</param-value>
    </context-param>
    <context-param>
        <description>If this param is set, and calling toLowerCase().equals("true") on a String representation of its value returns true,
        all submitted fields will be validated. This is necessary to allow the model validator to decide whether null or empty values are allowable
        in the current application. If the value is false, null or empty values will not be passed to the validators.
        If the value is the string gautoh, the runtime must check if JSR-303 Beans Validation is present in the current environment.
        If so, the runtime must proceed as if the value gtrueh had been specified.
        If JSR-303 Beans Validation is not present in the current environment, the runtime most proceed as if the value "false" had been specified.
        If the param is not set, the system must behave as if the param was set with the value gautoh. </description>
        <param-name>javax.faces.VALIDATE_EMPTY_FIELDS</param-name>
        <param-value>false</param-value>
    </context-param>
    <context-param>
        <description>Setting this parameter to true will have the effect of disabling the automatic installation of Bean Validation to every input component
        in every view in the application, though manual installation is still possible.</description>
        <param-name>javax.faces.validator.DISABLE_DEFAULT_BEAN_VALIDATOR</param-name>
        <param-value>true</param-value>
    </context-param>
    <!-- Security -->
    <context-param>
        <description>Disable
		Powered By Header</description>
        <param-name>com.sun.faces.sendPoweredByHeader</param-name>
        <param-value>false</param-value>
    </context-param>
    <context-param>
        <description>If
		true then all web configuration information (context initialization parameters
		and environment entries) will be written to the log. This is useful during
		development to confirm your application is configured as expected. Valid
		values for this parameter are true and false </description>
        <param-name>com.sun.faces.displayConfiguration</param-name>
        <param-value>false</param-value>
    </context-param>
    <context-param>
        <param-name>javax.faces.FACELETS_SKIP_COMMENTS</param-name>
        <param-value>true</param-value>
    </context-param>

    <!-- Servlet Container -->
    <mime-mapping>
        <extension>eot</extension>
        <mime-type>application/vnd.ms-fontobject</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>otf</extension>
        <mime-type>font/opentype</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>ttf</extension>
        <mime-type>application/x-font-ttf</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>woff</extension>
        <mime-type>application/x-font-woff</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>svg</extension>
        <mime-type>image/svg+xml</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>ico</extension>
        <mime-type>image/x-icon</mime-type>
    </mime-mapping>

    <!-- Session Configuration -->
    <session-config>
        <session-timeout>20</session-timeout>
        <cookie-config>
            <name>CUIUID</name>
            <http-only>true</http-only>
        </cookie-config>
        <tracking-mode>COOKIE</tracking-mode>
    </session-config>

    <!-- ======= Direct .xhtml access constraint - Starts ======= -->
    <security-constraint>
        <display-name>Restrict direct access to XHTML files</display-name>
        <web-resource-collection>
            <web-resource-name>XHTML files</web-resource-name>
            <url-pattern>*.xhtml</url-pattern>
        </web-resource-collection>
        <auth-constraint />
    </security-constraint>
    <!-- ======= Direct .xhtml access constraint - Ends ======= -->
</web-fragment>