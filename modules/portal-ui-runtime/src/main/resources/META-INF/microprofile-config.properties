config_name=portal-ui-runtime
# Defines the default configuration for the CUI-Portal

# Usually all our applications need authentication. This parameter defines the views
# or partial trees that do not need any authentication to be displayed, as comma separated list.
# Caution: The views are relative to the root, usually starting with /faces.
# The distinct values are to be checked using String#startsWith().
# The default for the portal is '/guest/'.
# To match all views, you can use '/'.
portal.view.non_secured=/guest/

# Defines the views that are transient, therefore not part of the state saving.
# Caution: The views are relative to the root, usually starting with /faces.
# The distinct values are to be checked using String#startsWith().
# The default for the portal is '/guest/'.
# To match all views, you can use '/'.
portal.view.transient=/guest/

# Defines the views that are being suppressed: The portal provides many artifacts
# that can be overridden by concrete modules.
# This can be services or beans, usually to be overridden using the CDI way.
# In addition, there are templates that can be overridden by our template mechanisms.
# But what about overriding pages that are delivered from the portal,
# e.g. faces/guest/login.jsf?
# If a concrete application has its own pages
# using /my-ui/guest/login.jsf for login.
# Due to the deployment mechanics of the portal faces/guest/login.jsf will still be
# accessible.
# To deal with this issue, the portal view suppression mechanics may be used.
# Caution: The views are relative to the root, usually starting with /faces.
# The distinct values are to be checked using String#startsWith().
# The default for the portal is '', saying no view is to be suppressed.
portal.view.suppressed=

# Enables the view part cache (e.g., for the navigation menu).
portal.view.cache.enabled=true

# Defines the views that are only accessible if the user has a specific role.
# E.g. all views under '/demo-app/administration' should be only accessible, if the user has the role 'admin'.
#portal.view.restrict.role.admin=/demo-app/administration/

# A comma separated list of libraries that should be handled by the CuiResourceHandler.
# Handled by the resource handler means selecting the .min-version of the resource
# if available and adding a cache-buster to the resource request.
# The default value for the Portal is:
# "de.cuioss.fonts,de.cuioss.portal.css,de.cuioss.javascript,thirdparty.js,vendor"
portal.resource.handled_libraries=de.cuioss.fonts,de.cuioss.portal.css,de.cuioss.javascript,thirdparty.js,vendor

# A comma separated list of suffixes that should be handled by the CuiResourceHandler.
# Handled by the resource handler means selecting the .min-version of the resource is
# available and adding a cache-buster to the resource request.
# The default value for the Portal is: "eot,ttf,svg,js,css,woff"
portal.resource.handled_suffixes=eot,ttf,svg,js,css,woff

# The String used for the cache buster for the resources under the control.
# The default value for the Portal is: The corresponding cui version, e.g. "1.0"
portal.resource.version=${project.version}

# To allow caching of specific resources, it allows specifying how long (in minutes) the
# browser does not need to retrieve the resource again. It will not be used in
# {@link ProjectStage#DEVELOPMENT}.
# Default value: 7 * 24 * 60
portal.resource.maxAge=10080

# The configured default theme. The default value for the Portal is 'Default'
# Caution:  In order to work, the default theme must be defined at
# "portal.theme.available_themes"
portal.theme.default=Default

# The configured available themes as a comma separated list.
# The default value for the Portal is 'Default,High-Contrast'
portal.theme.available_themes=Default,High-Contrast

# Defines the url-parameter to be ignored for the server side history manager as a
# comma separated list.
# Caution: The checks are all lower-cased, therefore, this parameter must be
# lower-cased as well.
# The default for the portal is 'sessionid,jfwid'
portal.history.exclude_parameter=jsessionid,jfwid

# Defines the views that are to be excluded from the server-side history, as
# a comma separated list.
# The distinct values are to be checked using String#startsWith().
# The default for the portal is '/guest/'.
# To match all views, you can use '/'.
portal.history.view_excludes=/guest/

# Defines the behavior of the login page if called with an already logged-in user.
# Currently, there are two strategies available: 'goto_home' resulting in a redirect
# to the home page
# and 'logout' resulting in logging out the current logged-in user.
# The portal default is 'goto_home'
portal.pages.login.logged_in_strategy=goto_home

# Define configuration for default selected user store.
# If no valid setting is defined, the first available user store is used.
portal.pages.login.default_user_store=

# Defines the behavior of the 404 / resource not found view.
# If set to 'true' the application will implicitly redirect to the home-view
# If set to 'false' it displays the 'home' link only
# The portal default is 'true'
portal.pages.error.404_redirect_to_home=true

# Allows defining custom http header properties to be written in the response header.
# Each entry consists of a logical name to identify and reconfigure the setting,
# an enabled flag, an optional
# views property to restrict the entry to specific view paths, and the content as is
# should be written into the header.

# Default Content security policy header.
# As strict as possible due to limitations from CUI, JSF and Primefaces.
# Allows inline Javascript and inline styles.
portal.httpHeader.csp.enabled=true
portal.httpHeader.csp.content=Content-Security-Policy: default-src 'none'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; connect-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; font-src 'self'; object-src 'self'; media-src 'self'; form-action 'self'; frame-ancestors 'self';

# Default X-Frame-Options header. Allows only embedding views
# into application from the same origin.
portal.httpHeader.xFrame.enabled=true
portal.httpHeader.xFrame.views=/
portal.httpHeader.xFrame.content=X-Frame-Options: SAMEORIGIN

# Default X-XSS-Protection header. Tells the browser to block the response if it detects an
# attack rather than sanitizing the script.
portal.httpHeader.xssProtection.enabled=true
portal.httpHeader.xssProtection.views=/
portal.httpHeader.xssProtection.content=X-XSS-Protection: 1; mode=block

# HTTP Strict Transport Security is an excellent feature to support on your site
# and strengthens your implementation of TLS by getting the
# User Agent to enforce the use of HTTPS.
portal.httpHeader.strictTransportSecurity.enabled=true
portal.httpHeader.strictTransportSecurity.views=/
portal.httpHeader.strictTransportSecurity.content=Strict-Transport-Security: max-age=31536000; includeSubDomains

# Default No-Sniff config
# See https://www.golem.de/news/cross-site-scripting-javascript-code-in-bilder-einbetten-1411-110264-2.html
# or http://webblaze.cs.berkeley.edu/papers/barth-caballero-song.pdf
portal.httpHeader.nosniff.enabled=true
portal.httpHeader.nosniff.content=X-Content-Type-Options: nosniff

# Default Cache Expires configuration. Forces to not cache any content in.
portal.httpHeader.cacheExpires.enabled=true
portal.httpHeader.cacheExpires.views=/
portal.httpHeader.cacheExpires.content=Expires: -1

# Default Cache Pragma configuration. Forces to not cache any content in.
portal.httpHeader.cachePragma.enabled=true
portal.httpHeader.cachePragma.views=/
portal.httpHeader.cachePragma.content=Pragma: no-cache

# Default Cache Control configuration. Forces to not cache any content in.
portal.httpHeader.cacheControl.enabled=true
portal.httpHeader.cacheControl.views=/
portal.httpHeader.cacheControl.content=Cache-Control: no-cache, no-store, must-revalidate

# Cache Control configuration for healthcheck.
portal.httpHeader.cacheControlHealth.enabled=true
portal.httpHeader.cacheControlHealth.views=/health
portal.httpHeader.cacheControlHealth.content=Cache-Control: no-cache, no-store, must-revalidate

# Cache Pragma configuration for healthcheck.
portal.httpHeader.cachePragmaHealth.enabled=true
portal.httpHeader.cachePragmaHealth.views=/health
portal.httpHeader.cachePragmaHealth.content=Pragma: no-cache

# Activates navigation menu items and defines their order and hierarchy.
# Also see: de.cuioss.jsf.api.components.model.menu.NavigationMenuItem
#
# Each entry consists of a logical name starting with "portal.menu." plus the menu id (also see
# NavigationMenuItem.getId) and one of the properties "enabled",
# "order" or "parent".
#
# enabled: defaults to true and can be used to disable existing entries.
# order: is used to define the order of the items. Consider reserving space between the items.
# parent: is used to define a hierarchy. To define root menu item, it must be set to 'top'.
#
# Example:
# portal.menu:
#   about:
#     enabled: true
#     order: 20
#     parent: userMenuItem
#
# Separator:
# To create a separator menu item, just create an entry starting with "separator". E.g.:
# portal.menu:
#   separator1:
#     order: 10
#     parent: userMenuItem
#
portal.menu.userMenuItem.order=40
portal.menu.userMenuItem.parent=top
portal.menu.preferencesMenuItem.order=20
portal.menu.preferencesMenuItem.parent=userMenuItem
portal.menu.accountMenuItem.enabled=false
portal.menu.accountMenuItem.order=25
portal.menu.accountMenuItem.parent=userMenuItem
portal.menu.aboutMenuItem.order=48
portal.menu.aboutMenuItem.parent=userMenuItem
portal.menu.logoutMenuItem.order=48
portal.menu.logoutMenuItem.parent=top

# Defines the (relative) path to customization resources.
portal.customization.enabled=true
portal.customization.dir=${portal.configuration.dir}/customization/

# Defines whether the listener for StickyMessages is enabled. Defaults to true.
portal.listener.StickyMessages.enabled=true

# Defines whether the listener for HistoryManager (for "back" Navigation and detection of redirects) is enabled.
# Defaults to true.
portal.listener.HistoryManager.enabled=true

# Defines whether the listener for Authentication (to suppress not authenticated access of protected pages) is enabled.
# Defaults to true.
portal.listener.Authentication.enabled=true
portal.listener.Authorization.enabled=true

# Defines whether the listener for ViewSuppression is enabled. Defaults to true.
portal.listener.ViewSuppression.enabled=true

# Defines whether the listener for tracing faces-requests is enabled. Defaults to false.
# To activate tracing on the application log, you must set the Logger for
# de.cuioss.portal.ui.runtime.application.metrics.RequestTracer to debug. In case of metrics being
# enabled as well, it will register as metric.
portal.listener.Trace.enabled=false

# Defines the timeout to retrieve a backend request in seconds. After this timeout the request will be aborted.
portal.lazyLoading.request.retrieve.timeout=120

# Defines the timeout to handle a backend request in seconds. After this timeout the request will be aborted. This
# can happen if the initial rendering or the ajax update request was aborted because of redirect.
portal.lazyLoading.request.handle.timeout=30